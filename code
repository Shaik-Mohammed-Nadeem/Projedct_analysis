/*In this project, a number of questions are asked, and the user is awarded a cash prize for each correct answer given.
In the quiz games, questions are chosen in such a way that they cover all fields of a typical quiz contest.
The userâ€™s general knowledge is tested with quiz questions regarding science, technology, movies, sports, general health, geography, and many more.*/
#include<stdio.h>
#include<conio.h>
#include<ctype.h>
#include<stdlib.h>
#include<string.h>
void show_record();// shows the highest cash prize won by a particular user
void reset_score();// to reset the highest score/cash prize to default.
void help();//help menu with game summary and rules.
void edit_score(float , char []);//adds the current cash prize won to the previous one upon giving the right answer to a question.
int main()//Start of main function.
     {
     system("color 3f");
     int countr,r,r1,count,i,n;
     float score;
     char choice;
     char participant[20];
     mainhome:
     system("cls");
     printf("|NADEEM|\n\n\n");
     printf("\t\t\t | THE KNOWLEDGE TESTER |\n");
     printf("\n\t\t________________________________________");

     printf("\n\n\t\t\t  | Welcome To The Process |");
     printf("\n\t\t________________________________________");
     printf("\n\n\t\t   Get Enlightened Here !!!!!    ") ;
     printf("\n\t\t________________________________________");
     printf("\n\n\t\t > Press S to Start the Game");
     printf("\n\t\t > Press V to View the Highest Score  ");
     printf("\n\t\t > Press R to Reset Score");
     printf("\n\t\t > press H for Help");
     printf("\n\t\t > press Q to Quit");
     printf("\n\n\t\t > Enter Your Choice : ");
     choice=toupper(getch());
     if (choice=='V')
	{
	show_record();
	goto mainhome;
	}
     else if (choice=='H')
	{
	help();getch();
	goto mainhome;
	}
	else if (choice=='R')
	{reset_score();
	getch();
	goto mainhome;}
	else if (choice=='Q')
	exit(1);
    else if(choice=='S')
    {
     system("cls");

    printf("\n\n\n\n\n\n\n\n\n\n\t\t\t What's Your Name_?: ");
     gets(participant);

    system("cls");
    printf("\n ------------------  Welcome %s to C Program Knowledge Tester --------------------------",participant);
    printf("\n\n  |Instructions for you|");
    printf("\n -------------------------------------------------------------------------");
    printf("\n >> The two two types of levels are,Amateur level &  Standard level");
    printf("\n >> In Amateur level you will be asked a total of 3 questions to test your Knowledge");
    printf("\n     You are eligible to participate if you give atleast 2");
    printf("\n    right answers, otherwise you can't proceed further to the Standard level.");
    printf("\n >> Your test starts with Standard level. In this round you will be asked a");
    printf("\n    total of 10 questions. Each right answer will be awarded 10 points");
    printf("\n    By this way you can clear the challange....!");
    printf("\n >> You will be given 4 options and you have to press A, B ,C or D for the");
    printf("\n    right option.");
    printf("\n >> You will be asked questions continuously, till right answers are given");
    printf("\n >> No negative marking for wrong answers!");
    printf("\n\n\t ||||| JUST NAIL IT DOWN ||||| ");
    printf("\n\n\n Press Y  to start the test!\n");
    printf("\n Press any other key to return to the main menu!");
    if (toupper(getch())=='Y')
		{
		    goto home;
        }
	else
		{
        goto mainhome;
       system("cls");
       }

     home:
     system("cls");
     count=0;
     for(i=1;i<=3;i++)
     {
    system("cls");
     r1=i;


     switch(r1)
		{
		case 1:
		printf("\n\n	Which of the following statements should be used to obtain a remainder after dividing 3.14 by 2.1 ?");
		printf("\n\nA.rem = 3.14 % 2.1;\t\t\t\tB.rem = modf(3.14, 2.1);\n\nC.rem = fmod(3.14, 2.1);\t\tD.Remainder cannot be obtain in floating point division.");
		if (toupper(getch())=='C')
			{
			    printf("\n\nCorrect!!!");count++;
			    getch();
			    break;
}
		else
		       {
		           printf("\n\nWrong!!! The correct answer is C.rem = fmod(3.14, 2.1);");
		           getch();
		       break;
		       }

        case 2:
		printf("\n\n\n	What are the types of linkages?");
		printf("\n\nA.Internal and External\t\tB.External, Internal and None\n\nC.External and None\t\tD.Internal");
		if (toupper(getch())=='B')
			{printf("\n\nCorrect!!!");count++;
			getch();
			break;}
		else
		       {printf("\n\nWrong!!! The correct answer is B.External, Internal and None");
		       getch();
		       break;}

        case 3:
		printf("\n\n\n Which of the following special symbol allowed in a variable name?");
		printf("\n\nA.* (asterisk)\t\tB.* (asterisk)\n\nC.- (hyphen)\t\tD._ (underscore)");
		if (toupper(getch())=='D')
			{printf("\n\nCorrect!!!");count++;
			getch();
			break;}
		else
		       {printf("\n\nWrong!!! The correct answer is D._ (underscore)");
		       getch();
		       break;}

        case 4:
		printf("\n\n\n How would you round off a value from 1.66 to 2.0?");
		printf("\n\nA.ceil(1.66)\t\tB.floor(1.66)\n\nC.roundup(1.66)\t\tD.roundto(1.66)");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");count++;
			getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.ceil(1.66)");
		       getch();
		       break;}

        case 5:
        printf("\n\n\n By default a real number is treated as a");
        printf("\n\nA.float\t\tB.double\n\nC.long double\t\tD.far double");
        if (toupper(getch())=='B')
               {printf("\n\nCorrect!!!");count++;
               getch();
                break;}
        else
		       {printf("\n\nWrong!!! The correct answer is B.double");
		       getch();
		       break;}

        case 6:
		printf("\n\n\nIs the following statement a declaration or definition? extern int i;");
		printf("\n\nA.Declaration\t\tB.Definition\n\nC.Function\t\tD.Error");
		if (toupper(getch())=='A' )
			{printf("\n\nCorrect!!!");count++;
			getch();
			break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.Declaration");
		       getch();
		       break;}}
		       }

	if(count>=2)
	{goto test;}
	else
	{
	system("cls");
	printf("\n\nSORRY WE REGRET THAT YOU HAVE NOT CLEARED THIS ROUND, BETTER LUCK NEXT TIME");
	getch();
	goto mainhome;
	}
     test:
     system("cls");
     printf("\n\n\t*** CONGRATULATION %s you are qualified for the next round ***",participant);
     printf("\n\n\n\n\t!Press any key to Start the test!");
     if(toupper(getch())=='p')
		{goto game;}
game:
     countr=0;
     for(i=1;i<=10;i++)
     {system("cls");
     r=i;

     switch(r)
		{
		case 1:
		printf("\n\n 	When we mention the prototype of a function?");
		printf("\n\nA.Defining\t\tB.Declaring\n\nC.Prototyping\t\tD.Calling");
		if (toupper(getch())=='B')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;getch();}
		else
		       {printf("\n\nWrong!!! The correct answer is B.Declaring");getch();
		       goto score;
		       break;}

		case 2:
		printf("\n\n\nA long double can be used if range of a double is not enough to accommodate a real number.");
		printf("\n\nA.True\t\tB.False");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.True");getch();
		      goto score;
		       break;
		       }

        case 3:
		printf("\n\n\n  A float is 4 bytes wide, whereas a double is 8 bytes wide. ");
		printf("\n\nA.True\t\tB.False");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.True");getch();
		       goto score;
		       break;}

        case 4:
		printf("\n\n\n	If the definition of the external variable occurs in the source file before its use in a particular function, then there is no need for an extern declaration in the function.");
		printf("\n\nA.True\t\tB.False");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {
                printf("\n\nWrong!!! The correct answer is A.True");getch();
		       goto score;
		       break;
		       }

        case 5:
		printf("\n\n\n 	Range of double is -1.7e-38 to 1.7e+38 (in 16 bit platform - Turbo C under DOS)");
		printf("\n\nA.True\t\tB.False");
		if (toupper(getch())=='B')
			{printf("\n\nCorrect!!!");countr++;getch(); break;}
		else
		       {
		           printf("\n\nWrong!!! The correct answer is B.False");
		       getch();
		       goto score;
		       break;
		       }

		case 6:
		printf("\n\n\n	Size of short integer and long integer would vary from one platform to another.");
		printf("\n\nA.True\t\tB.False");
		if (toupper(getch())=='A' )
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.True");goto score;
		       getch();
		       break;}

        case 7:
		printf("\n\n\n	Range of float id -2.25e+308 to 2.25e+308?");
		printf("\n\nA.True\t\tB.False");
		if (toupper(getch())=='B')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is B.False");getch();
		       goto score;
		       break;}

        case 8:
		printf("\n\n\n Suppose a program is divided into three files f1, f2 and f3, and a variable is defined in the file f1 but used in files f2 and f3. In such a case would we need the extern declaration for the variables in the files f2 and f3?");
		printf("\n\nA.Yes\t\tB.No");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");countr++;getch(); break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.Yes");getch();
		       goto score;
		       break;}

        case 9:
		printf("\n\n\n	Global variable are available to all functions. Does there exist a mechanism by way of which it available to some and not to others.");
		printf("\n\nA.Yes\t\tB.No");
		if (toupper(getch())=='B')
			{printf("\n\nCorrect!!!");countr++; getch();
			break;}
		else
		       {printf("\n\nWrong!!! The correct answer is B.No");getch();
		       goto score;
		       break;}

        case 10:
		printf("\n\n\n 	Is it true that a global variable may have several declarations, but only one definition?");
		printf("\n\nA.Yes\t\tB.No");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");countr++;getch(); break;}
		else
		       {printf("\n\nWrong!!! The correct answer is A.Yes");getch();break;goto score;}

        case 11:
		printf("\n\n\n Is it true that a function may have several declarations, but only one definition?");
		printf("\n\nA.Yes\t\tB.No");
		if (toupper(getch())=='A')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
              {printf("\n\nWrong!!! The correct answer is A.Yes");getch();
              break;goto score;}

        case 12:
		printf("\n\n\n 	 How will you free the allocated memory ?");
		printf("\n\nA.remove(var-name);\t\tB.free(var-name);\n\nC.delete(var-name);\t\tD.dalloc(var-name);");
		if (toupper(getch())=='B')
			  {printf("\n\nCorrect!!!");countr++;getch();
			   break;}
		else
              {printf("\n\nWrong!!! The correct answer is B.free(var-name);");getch();
              break;goto score;}

		case 13:
		printf("\n\n\nWhat is the similarity between a structure, union and enumeration?");
		printf("\n\nA.All of them let you define new values\t\tB.All of them let you define new data types\n\nC.All of them let you define new pointers\t\tD.All of them let you define new structures");
		if (toupper(getch())=='B')
			{printf("\n\nCorrect!!!");countr++;getch();
			break;}
		else
		       {printf("\n\nWrong!!! The correct answer is B.All of them let you define new data types");getch();
		       break;goto score;}

        case 14:
		printf("\n\n\n 	In which stage the following code #include<stdio.h> gets replaced by the contents of the file stdio.h");
		printf("\n\nA.During editing\t\tB.During linking\n\nC.During execution\t\tD.During preprocessing");
		if (toupper(getch())=='D')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is D.During preprocessing");getch();
		       break;
			   goto score;}

		case 15:
		printf("\n\n\nWhat is stderr ?");
		printf("\n\nA.standard error\t\tB.standard error types\n\nC.standard error streams\t\tD.standard error definitions");
		if (toupper(getch())=='C')
			{printf("\n\nCorrect!!!");countr++;getch();
			 break;}
		else
		       {printf("\n\nWrong!!! The correct answer is C.standard error streams");getch();
		       goto score;
		       break;}}}

	score:
    system("cls");
	score=(float)countr*1000;
	if(score>0.00 && score<1000)
	{
	   printf("\n\n\t\t**************** CONGRATULATIONS *****************");
	     printf("\n\t You won $%.2f",score);goto go;}

	 else if(score==1000.00)
	{
	    printf("\n\n\n \t\t**************** CONGRATULATIONS ****************");
	    printf("\n\t\t\t\t YOU ARE UPGRADED!!!!!!!!!");
	    printf("\n\t\t You won $%.2f",score);
	    printf("\t\t Thank You!!");
	}
	 else
{
	 printf("\n\n\t******** SORRY WE REGRET ********");
	    printf("\n\t\t Thanks for your participation");
	    printf("\n\t\t TRY AGAIN");goto go;}

	go:
	puts("\n\n Press Y if you want to Participate once again");
	puts(" Press any key if you want to go main menu");
	if (toupper(getch())=='Y')
		goto home;
	else
		{
		edit_score(score,participant);
		goto mainhome;}}}//End of main
// shows the highest Score won by a particular Paticipant
void show_record()
 {system("cls");
	char name[20];
	float scr;
	FILE *f;
	f=fopen("score.txt","r");
	fscanf(f,"%s%f",&name,&scr);
	printf("\n\n\t\t*************************************************************");
	printf("\n\n\t\t %s has secured the Highest Score %0.2f",name,scr);
	printf("\n\n\t\t*************************************************************");
	fclose(f);
	getch();}
// to reset the highest score/points to default
void reset_score()
{system("cls");
    float sc;
	char nm[20];
	FILE *f;
	f=fopen("score.txt","r+");
	fscanf(f,"%s%f",&nm,&sc);
	sc=0;
	fprintf(f,"%s,%.2f",nm,sc);
    fclose(f);}
//help menu with test summary and rules.
void help()

{system("cls");
    printf("\n ------------------  Welcome %s to C Program Knowledge Tester --------------------------");
    printf("\n\n  |Instructions for you|");
    printf("\n -------------------------------------------------------------------------");
    printf("\n >> The two two types of levels are,Amateur level &  Standard level");
    printf("\n >> In Amateur level you will be asked a total of 3 questions to test your Knowledge");
    printf("\n     You are eligible to participate if you give atleast 2");
    printf("\n    right answers, otherwise you can't proceed further to the Standard level.");
    printf("\n >> Your test starts with Standard level. In this round you will be asked a");
    printf("\n    total of 10 questions. Each right answer will be awarded 10 points");
    printf("\n    By this way you can clear the challange....!");
    printf("\n >> You will be given 4 options and you have to press A, B ,C or D for the");
    printf("\n    right option.");
    printf("\n >> You will be asked questions continuously, till right answers are given");
    printf("\n >> No negative marking for wrong answers!");
    printf("\n\n\t ||||| JUST NAIL IT DOWN ||||| ");}


//adds the current points gain  to the previous one upon selecting the right answer to a question
void edit_score(float score, char plnm[20])
	{system("cls");
	float sc;
	char nm[20];
	FILE *f;
	f=fopen("score.txt","r");
	fscanf(f,"%s%f",&nm,&sc);
	if (score>=sc)
	  { sc=score;
	    fclose(f);
	    f=fopen("score.txt","w");
	    fprintf(f,"%s\n%.2f",plnm,sc);
	    fclose(f);}}
	
